
# 비교 정렬
# Quicksort는 일반적으로 실행 시간이 , 그러나 더 빨리 정렬할 수 있는 알고리즘이 있습니까? 일반적으로 이것은 불가능합니다. 대부분의 정렬 알고리즘은 비교 정렬입니다. 즉, 요소를 서로 비교하여 목록을 정렬합니다. 비교 정렬 알고리즘은 각 요소를 배치할 위치를 아는 데 필요한 최소 비교 횟수를 나타내므로 (최악의 경우) 실행 시간을 이길 수 없습니다. 자세한 내용은 이 노트(PDF)를 참조하세요.

# 대체 정렬
# 다른 정렬 방법인 카운팅 정렬은 비교가 필요하지 않습니다. 대신 인덱스 범위가 정렬할 배열의 전체 값 범위를 포함하는 정수 배열을 만듭니다. 원래 배열에서 값이 발생할 때마다 해당 인덱스에서 카운터를 증가시킵니다. 마지막에 0이 아닌 값을 가진 각 인덱스의 값을 해당 횟수만큼 인쇄하여 계산 배열을 실행합니다.


def countingSort(arr):
    # Write your code here
    a = [0 for i in range(100)]
    for i in arr:
        a[i] += 1

    return a
